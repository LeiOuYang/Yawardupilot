#pragma once

#include_next <cstddef>

#if defined(HAVE_NULLPTR_T) && !HAVE_NULLPTR_T
namespace std {
    typedef decltype(nullptr) nullptr_t;

    template< class T > struct remove_reference      {typedef T type;};
    template< class T > struct remove_reference<T&>  {typedef T type;};
    template< class T > struct remove_reference<T&&> {typedef T type;};

    template< class T >
    typename std::remove_reference<T>::type&& move( T&& t );
}
#endif
